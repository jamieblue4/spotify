{"ast":null,"code":"var _jsxFileName = \"/Users/jamie/Desktop/spotify/web-music-player/spotify-clone-revision/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from './Login';\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from './Player';\nimport { useDataLayerValue } from './DataLayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\nfunction App() {\n  _s();\n  const [{\n    user,\n    token\n  }, dispatch] = useDataLayerValue();\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      });\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({\n          type: 'SET_USER',\n          user: user\n        });\n      });\n      spotify.getUserPlaylists().then(playlists => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists\n        });\n      });\n      spotify.getPlaylist('37i9dQZEVXcHPjWDU60SuW').then(response => dispatch({\n        type: \"SET_DISCOVER_WEEKLY\",\n        discover_weekly: response\n      }));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: token ? /*#__PURE__*/_jsxDEV(Player, {\n      spotify: spotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 48\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WaEVPrhstsCUlna9FyHo/78Ugc4=\", false, function () {\n  return [useDataLayerValue];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Login","getTokenFromUrl","SpotifyWebApi","Player","useDataLayerValue","spotify","App","user","token","dispatch","hash","window","location","_token","access_token","type","setAccessToken","getMe","then","getUserPlaylists","playlists","getPlaylist","response","discover_weekly"],"sources":["/Users/jamie/Desktop/spotify/web-music-player/spotify-clone-revision/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from './Login';\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from './Player';\nimport { useDataLayerValue } from './DataLayer';\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{user, token}, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n\n    const _token = hash.access_token;\n\n    if (_token) {\n\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      spotify.setAccessToken(_token);\n\n      spotify.getMe().then(user => {\n        dispatch({\n          type: 'SET_USER',\n          user: user,\n        });\n      });\n\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists,\n        });\n      });\n\n      spotify.getPlaylist('37i9dQZEVXcHPjWDU60SuW').then(response => \n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        })\n      );\n    }\n  }, []);\n\n  return (\n    <div className=\"app\">\n      {token ? <Player spotify={spotify} /> : (<Login />)}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,eAAe,QAAQ,WAAW;AAC3C,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,iBAAiB,QAAQ,aAAa;AAAC;AAEhD,MAAMC,OAAO,GAAG,IAAIH,aAAa,EAAE;AAEnC,SAASI,GAAG,GAAG;EAAA;EACb,MAAM,CAAC;IAACC,IAAI;IAAEC;EAAK,CAAC,EAAEC,QAAQ,CAAC,GAAGL,iBAAiB,EAAE;EAErDN,SAAS,CAAC,MAAM;IACd,MAAMY,IAAI,GAAGT,eAAe,EAAE;IAC9BU,MAAM,CAACC,QAAQ,CAACF,IAAI,GAAG,EAAE;IAEzB,MAAMG,MAAM,GAAGH,IAAI,CAACI,YAAY;IAEhC,IAAID,MAAM,EAAE;MAEVJ,QAAQ,CAAC;QACPM,IAAI,EAAE,WAAW;QACjBP,KAAK,EAAEK;MACT,CAAC,CAAC;MAEFR,OAAO,CAACW,cAAc,CAACH,MAAM,CAAC;MAE9BR,OAAO,CAACY,KAAK,EAAE,CAACC,IAAI,CAACX,IAAI,IAAI;QAC3BE,QAAQ,CAAC;UACPM,IAAI,EAAE,UAAU;UAChBR,IAAI,EAAEA;QACR,CAAC,CAAC;MACJ,CAAC,CAAC;MAEFF,OAAO,CAACc,gBAAgB,EAAE,CAACD,IAAI,CAAEE,SAAS,IAAK;QAC7CX,QAAQ,CAAC;UACPM,IAAI,EAAE,eAAe;UACrBK,SAAS,EAAEA;QACb,CAAC,CAAC;MACJ,CAAC,CAAC;MAEFf,OAAO,CAACgB,WAAW,CAAC,wBAAwB,CAAC,CAACH,IAAI,CAACI,QAAQ,IACzDb,QAAQ,CAAC;QACPM,IAAI,EAAE,qBAAqB;QAC3BQ,eAAe,EAAED;MACnB,CAAC,CAAC,CACH;IACH;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,UACjBd,KAAK,gBAAG,QAAC,MAAM;MAAC,OAAO,EAAEH;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,gBAAI,QAAC,KAAK;MAAA;MAAA;MAAA;IAAA;EAAI;IAAA;IAAA;IAAA;EAAA,QAC/C;AAEV;AAAC,GA9CQC,GAAG;EAAA,QACwBF,iBAAiB;AAAA;AAAA,KAD5CE,GAAG;AAgDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}